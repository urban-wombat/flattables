package {{.PackageName}}

/*
	{{.FlatTablesCodeFileName}}
	DO NOT MODIFY
	{{.AutomaticallyFrom}}
*/

import (
	{{range .Imports}}
	{{- .}}
	{{end}}
)

func GetTableSetAsFlatBuffers(tableSet *gotables.TableSet) ([]byte, error) {
	if tableSet == nil {
		return nil, fmt.Errorf("tableSet.%s() tableSet is <nil>", funcName())
	}

	var flatBuffersBytes []byte

//	fmt.Println("inside GetTableSetAsFlatBuffers()")
//	fmt.Println(tableSet)

	// Create FlatBuffers builder
	const initialSize = 0
	builder := flatbuffers.NewBuilder(initialSize)
	if builder == nil {
		return nil, fmt.Errorf("Could not create FlatBuffers builder") 
	}

	builder.Reset()

	{{range .Tables}}
		{{. | tableName}}
	{{end}}

	return flatBuffersBytes, nil
}

func funcName() string {
	pc, _, _, _ := runtime.Caller(1)
	nameFull := runtime.FuncForPC(pc).Name() // main.foo
	nameEnd := filepath.Ext(nameFull)        // .foo
	name := strings.TrimPrefix(nameEnd, ".") // foo
	return name
}
